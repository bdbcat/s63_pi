clone_folder: c:\project\opencpn\plugin_source
shallow_clone: false
clone_depth: 10

image:
- Visual Studio 2017

platform: 
# - x64
- Win32

configuration: RelWithDebInfo
test: OFF

install:
  # VS2015 and earlier version - '"C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x86'
  - call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars32.bat"
  
  # set environment variables for wxWidgets
  - set WXWIN=C:\wxWidgets-3.1.2
  - set wxWidgets_ROOT_DIR=%WXWIN%
  - set wxWidgets_LIB_DIR=%WXWIN%\lib\vc_dll
  - cmd: SET PATH=%PATH%;%WXWIN%;%wxWidgets_LIB_DIR%;C:\Program Files (x86)\Poedit\Gettexttools\bin;

  # install dependencies:
  - choco install poedit

  # Download and unzip wxwidgets
  - ps: Start-FileDownload http://opencpn.navnux.org/build_deps/wxWidgets-3.1.2.7z
  - cmd: 7z x wxWidgets-3.1.2.7z -o%WXWIN% > null

  # some debugging information
  - set
  # - cmake --help

  # build wxWidgets - Disabled as we provide prebuilt WX to save time
  #- cmd: cd %WXWIN%\build\msw\
  #- cmd: nmake -f makefile.vc BUILD=release SHARED=1 CFLAGS=/D_USING_V120_SDK71_ CXXFLAGS=/D_USING_V120_SDK71_
  #- cmd: nmake -f makefile.vc BUILD=debug SHARED=1 CFLAGS=/D_USING_V120_SDK71_ CXXFLAGS=/D_USING_V120_SDK71_

before_build:
  - cd c:\project\opencpn\plugin_source
  - mkdir build
  - cd build
#  - ps: Start-FileDownload http://opencpn.navnux.org/build_deps/OpenCPN_buildwin-4.99a.7z
#  - cmd: 7z x -y OpenCPN_buildwin-4.99a.7z -oc:\project\opencpn\buildwin
  - cmake -T v141_xp -DOCPN_CI_BUILD=ON ..

build_script:
  - cmake -G "Visual Studio 15 2017"   ..
  - cmake --build . --target install --config RelWithDebInfo
  - cmake --build . --target package --config RelWithDebInfo
  - choco install git
  - python -m ensurepip
  - python -m pip install setuptools
  - python -m pip install cloudsmith-cli
  - bash ../ci/appveyor-upload.sh

#  - path: 'build\RelWithDebInfo\opencpn.lib'
#    name: lib
#
#  - path: 'build\RelWithDebInfo\opencpn-*.pdb'
#    name: pdb
#
#deploy:
#  description: 'release created by AppVeyor CI'
#  provider: GitHub
#  auth_token: '%GitHub_auth_token%'
#  artifact: installer,lib
#  draft: true
#  prerelease: true
#  on:
#    appveyor_repo_tag: true # deploy on tag push only
#    configuration: RelWithDebInfo  # Debug contains non-redist MS DLLs
