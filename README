1. Build instructions

    A.  Windows

    i.       Create a build directory, e.g.  "C:\s63_pi_build"
    ii.      Copy the entire git source tree into this directory.
    iii.     Open a Visual Studio 10 command prompt, and navigate to this directory.
    iv.      Find a compatible copy of opencpn.lib (typically from the most recent OpenCPN Release build),
             and copy it into this directory.
    v.       Assuming your cmake 2.8 executable is installed normally, execute the following:
                "C:\Program Files\CMake 2.8\bin\cmake" -G "NMake Makefiles"
    vi.      Build the PlugIn install package by executing the following:
                NMake package

    The Windows install package will be built, and called s63_pi_x.x.x_setup.exe

    For Standalone or Independent Windows Compile
    1. Git clone
    2.Copy opencpn.lib from v4.0 into the /build directory.
    3.Copy ../include/opncpn_plugin.h  in the src directory due to link errors.
    4. CMakeLists.txt file  Line 200 and 201 comment this way:
```
 SET(OPENCPN_IMPORT_LIB "opencpn.lib")
# SET(OPENCPN_IMPORT_LIB "E:/opencpn_cmake2010/${CMAKE_CFG_INTDIR}/opencpn.lib")
```
  5. from the build directory  cmake ..   then cmake --build . and cmake --build . --config release
  6. Then issue cpack if you have NSIS setup.


    B. Linux

    i.       git clone the project.
    ii.      $cmake
    iii.     $make package

    The debian install package will be built, and called s63_pi_0.1.0-_i386.deb

